Terminals unused in grammar

   ERROR
   ENDFILE


State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: list_declaration

    2 list_declaration: list_declaration declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: INT ident SEMI
    7                | INT ident LBRK num RBRK SEMI

    8 fun_declaration: INT ident LPAR params RPAR compound_decl
    9                | VOID ident LPAR params RPAR compound_decl

   10 params: param_list
   11       | VOID

   12 param_list: param_list COMMA param
   13           | param

   14 param: INT ident
   15      | INT ident LBRK RBRK

   16 compound_decl: LBRC local_declarations statement_list RBRC
   17              | LBRC local_declarations RBRC
   18              | LBRC statement_list RBRC
   19              | LBRC RBRC

   20 local_declarations: local_declarations var_declaration
   21                   | var_declaration

   22 statement_list: statement_list statement
   23               | statement

   24 statement: expression_decl
   25          | compound_decl
   26          | selection_decl
   27          | iterator_decl
   28          | return_decl

   29 expression_decl: expression SEMI
   30                | SEMI

   31 selection_decl: IF LPAR expression RPAR statement
   32               | IF LPAR expression RPAR statement ELSE statement

   33 iterator_decl: WHILE LPAR expression RPAR statement

   34 return_decl: RETURN SEMI
   35            | RETURN expression SEMI

   36 expression: var ASSIGN expression
   37           | simple_expression

   38 var: ident
   39    | ident LBRK expression RBRK

   40 simple_expression: sum_expression relational sum_expression
   41                  | sum_expression

   42 relational: EQ
   43           | NE
   44           | LT
   45           | LTE
   46           | GT
   47           | GTE

   48 sum_expression: sum_expression sum term
   49               | term

   50 sum: PLUS
   51    | MINUS

   52 term: term mult factor
   53     | factor

   54 mult: TIMES
   55     | OVER

   56 factor: LPAR expression RPAR
   57       | var
   58       | activation
   59       | num

   60 activation: ident LPAR arg_list RPAR
   61           | ident LPAR RPAR

   62 arg_list: arg_list COMMA expression
   63         | expression

   64 ident: ID

   65 num: NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 31 32
ELSE (259) 32
WHILE (260) 33
INT (261) 6 7 8 14 15
VOID (262) 9 11
RETURN (263) 34 35
NUM (264) 65
ID (265) 64
ASSIGN (266) 36
EQ (267) 42
NE (268) 43
LT (269) 44
LTE (270) 45
GT (271) 46
GTE (272) 47
PLUS (273) 50
MINUS (274) 51
TIMES (275) 54
OVER (276) 55
LPAR (277) 8 9 31 32 33 56 60 61
RPAR (278) 8 9 31 32 33 56 60 61
LBRK (279) 7 15 39
RBRK (280) 7 15 39
LBRC (281) 16 17 18 19
RBRC (282) 16 17 18 19
COMMA (283) 12 62
SEMI (284) 6 7 29 30 34 35
ERROR (285)
ENDFILE (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
list_declaration (34)
    on left: 2 3, on right: 1 2
declaration (35)
    on left: 4 5, on right: 2 3
var_declaration (36)
    on left: 6 7, on right: 4 20 21
fun_declaration (37)
    on left: 8 9, on right: 5
params (38)
    on left: 10 11, on right: 8 9
param_list (39)
    on left: 12 13, on right: 10 12
param (40)
    on left: 14 15, on right: 12 13
compound_decl (41)
    on left: 16 17 18 19, on right: 8 9 25
local_declarations (42)
    on left: 20 21, on right: 16 17 20
statement_list (43)
    on left: 22 23, on right: 16 18 22
statement (44)
    on left: 24 25 26 27 28, on right: 22 23 31 32 33
expression_decl (45)
    on left: 29 30, on right: 24
selection_decl (46)
    on left: 31 32, on right: 26
iterator_decl (47)
    on left: 33, on right: 27
return_decl (48)
    on left: 34 35, on right: 28
expression (49)
    on left: 36 37, on right: 29 31 32 33 35 36 39 56 62 63
var (50)
    on left: 38 39, on right: 36 57
simple_expression (51)
    on left: 40 41, on right: 37
relational (52)
    on left: 42 43 44 45 46 47, on right: 40
sum_expression (53)
    on left: 48 49, on right: 40 41 48
sum (54)
    on left: 50 51, on right: 48
term (55)
    on left: 52 53, on right: 48 49 52
mult (56)
    on left: 54 55, on right: 52
factor (57)
    on left: 56 57 58 59, on right: 52 53
activation (58)
    on left: 60 61, on right: 58
arg_list (59)
    on left: 62 63, on right: 60 62
ident (60)
    on left: 64, on right: 6 7 8 9 14 15 38 39 60 61
num (61)
    on left: 65, on right: 7 59


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program           go to state 3
    list_declaration  go to state 4
    declaration       go to state 5
    var_declaration   go to state 6
    fun_declaration   go to state 7


State 1

    6 var_declaration: INT . ident SEMI
    7                | INT . ident LBRK num RBRK SEMI
    8 fun_declaration: INT . ident LPAR params RPAR compound_decl

    ID  shift, and go to state 8

    ident  go to state 9


State 2

    9 fun_declaration: VOID . ident LPAR params RPAR compound_decl

    ID  shift, and go to state 8

    ident  go to state 10


State 3

    0 $accept: program . $end

    $end  shift, and go to state 11


State 4

    1 program: list_declaration .
    2 list_declaration: list_declaration . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 12
    var_declaration  go to state 6
    fun_declaration  go to state 7


State 5

    3 list_declaration: declaration .

    $default  reduce using rule 3 (list_declaration)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 8

   64 ident: ID .

    $default  reduce using rule 64 (ident)


State 9

    6 var_declaration: INT ident . SEMI
    7                | INT ident . LBRK num RBRK SEMI
    8 fun_declaration: INT ident . LPAR params RPAR compound_decl

    LPAR  shift, and go to state 13
    LBRK  shift, and go to state 14
    SEMI  shift, and go to state 15


State 10

    9 fun_declaration: VOID ident . LPAR params RPAR compound_decl

    LPAR  shift, and go to state 16


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 list_declaration: list_declaration declaration .

    $default  reduce using rule 2 (list_declaration)


State 13

    8 fun_declaration: INT ident LPAR . params RPAR compound_decl

    INT   shift, and go to state 17
    VOID  shift, and go to state 18

    params      go to state 19
    param_list  go to state 20
    param       go to state 21


State 14

    7 var_declaration: INT ident LBRK . num RBRK SEMI

    NUM  shift, and go to state 22

    num  go to state 23


State 15

    6 var_declaration: INT ident SEMI .

    $default  reduce using rule 6 (var_declaration)


State 16

    9 fun_declaration: VOID ident LPAR . params RPAR compound_decl

    INT   shift, and go to state 17
    VOID  shift, and go to state 18

    params      go to state 24
    param_list  go to state 20
    param       go to state 21


State 17

   14 param: INT . ident
   15      | INT . ident LBRK RBRK

    ID  shift, and go to state 8

    ident  go to state 25


State 18

   11 params: VOID .

    $default  reduce using rule 11 (params)


State 19

    8 fun_declaration: INT ident LPAR params . RPAR compound_decl

    RPAR  shift, and go to state 26


State 20

   10 params: param_list .
   12 param_list: param_list . COMMA param

    COMMA  shift, and go to state 27

    $default  reduce using rule 10 (params)


State 21

   13 param_list: param .

    $default  reduce using rule 13 (param_list)


State 22

   65 num: NUM .

    $default  reduce using rule 65 (num)


State 23

    7 var_declaration: INT ident LBRK num . RBRK SEMI

    RBRK  shift, and go to state 28


State 24

    9 fun_declaration: VOID ident LPAR params . RPAR compound_decl

    RPAR  shift, and go to state 29


State 25

   14 param: INT ident .
   15      | INT ident . LBRK RBRK

    LBRK  shift, and go to state 30

    $default  reduce using rule 14 (param)


State 26

    8 fun_declaration: INT ident LPAR params RPAR . compound_decl

    LBRC  shift, and go to state 31

    compound_decl  go to state 32


State 27

   12 param_list: param_list COMMA . param

    INT  shift, and go to state 17

    param  go to state 33


State 28

    7 var_declaration: INT ident LBRK num RBRK . SEMI

    SEMI  shift, and go to state 34


State 29

    9 fun_declaration: VOID ident LPAR params RPAR . compound_decl

    LBRC  shift, and go to state 31

    compound_decl  go to state 35


State 30

   15 param: INT ident LBRK . RBRK

    RBRK  shift, and go to state 36


State 31

   16 compound_decl: LBRC . local_declarations statement_list RBRC
   17              | LBRC . local_declarations RBRC
   18              | LBRC . statement_list RBRC
   19              | LBRC . RBRC

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    INT     shift, and go to state 39
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    RBRC    shift, and go to state 42
    SEMI    shift, and go to state 43

    var_declaration     go to state 44
    compound_decl       go to state 45
    local_declarations  go to state 46
    statement_list      go to state 47
    statement           go to state 48
    expression_decl     go to state 49
    selection_decl      go to state 50
    iterator_decl       go to state 51
    return_decl         go to state 52
    expression          go to state 53
    var                 go to state 54
    simple_expression   go to state 55
    sum_expression      go to state 56
    term                go to state 57
    factor              go to state 58
    activation          go to state 59
    ident               go to state 60
    num                 go to state 61


State 32

    8 fun_declaration: INT ident LPAR params RPAR compound_decl .

    $default  reduce using rule 8 (fun_declaration)


State 33

   12 param_list: param_list COMMA param .

    $default  reduce using rule 12 (param_list)


State 34

    7 var_declaration: INT ident LBRK num RBRK SEMI .

    $default  reduce using rule 7 (var_declaration)


State 35

    9 fun_declaration: VOID ident LPAR params RPAR compound_decl .

    $default  reduce using rule 9 (fun_declaration)


State 36

   15 param: INT ident LBRK RBRK .

    $default  reduce using rule 15 (param)


State 37

   31 selection_decl: IF . LPAR expression RPAR statement
   32               | IF . LPAR expression RPAR statement ELSE statement

    LPAR  shift, and go to state 62


State 38

   33 iterator_decl: WHILE . LPAR expression RPAR statement

    LPAR  shift, and go to state 63


State 39

    6 var_declaration: INT . ident SEMI
    7                | INT . ident LBRK num RBRK SEMI

    ID  shift, and go to state 8

    ident  go to state 64


State 40

   34 return_decl: RETURN . SEMI
   35            | RETURN . expression SEMI

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41
    SEMI  shift, and go to state 65

    expression         go to state 66
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 41

   56 factor: LPAR . expression RPAR

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 67
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 42

   19 compound_decl: LBRC RBRC .

    $default  reduce using rule 19 (compound_decl)


State 43

   30 expression_decl: SEMI .

    $default  reduce using rule 30 (expression_decl)


State 44

   21 local_declarations: var_declaration .

    $default  reduce using rule 21 (local_declarations)


State 45

   25 statement: compound_decl .

    $default  reduce using rule 25 (statement)


State 46

   16 compound_decl: LBRC local_declarations . statement_list RBRC
   17              | LBRC local_declarations . RBRC
   20 local_declarations: local_declarations . var_declaration

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    INT     shift, and go to state 39
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    RBRC    shift, and go to state 68
    SEMI    shift, and go to state 43

    var_declaration    go to state 69
    compound_decl      go to state 45
    statement_list     go to state 70
    statement          go to state 48
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 47

   18 compound_decl: LBRC statement_list . RBRC
   22 statement_list: statement_list . statement

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    RBRC    shift, and go to state 71
    SEMI    shift, and go to state 43

    compound_decl      go to state 45
    statement          go to state 72
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 48

   23 statement_list: statement .

    $default  reduce using rule 23 (statement_list)


State 49

   24 statement: expression_decl .

    $default  reduce using rule 24 (statement)


State 50

   26 statement: selection_decl .

    $default  reduce using rule 26 (statement)


State 51

   27 statement: iterator_decl .

    $default  reduce using rule 27 (statement)


State 52

   28 statement: return_decl .

    $default  reduce using rule 28 (statement)


State 53

   29 expression_decl: expression . SEMI

    SEMI  shift, and go to state 73


State 54

   36 expression: var . ASSIGN expression
   57 factor: var .

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 57 (factor)


State 55

   37 expression: simple_expression .

    $default  reduce using rule 37 (expression)


State 56

   40 simple_expression: sum_expression . relational sum_expression
   41                  | sum_expression .
   48 sum_expression: sum_expression . sum term

    EQ     shift, and go to state 75
    NE     shift, and go to state 76
    LT     shift, and go to state 77
    LTE    shift, and go to state 78
    GT     shift, and go to state 79
    GTE    shift, and go to state 80
    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 41 (simple_expression)

    relational  go to state 83
    sum         go to state 84


State 57

   49 sum_expression: term .
   52 term: term . mult factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 49 (sum_expression)

    mult  go to state 87


State 58

   53 term: factor .

    $default  reduce using rule 53 (term)


State 59

   58 factor: activation .

    $default  reduce using rule 58 (factor)


State 60

   38 var: ident .
   39    | ident . LBRK expression RBRK
   60 activation: ident . LPAR arg_list RPAR
   61           | ident . LPAR RPAR

    LPAR  shift, and go to state 88
    LBRK  shift, and go to state 89

    $default  reduce using rule 38 (var)


State 61

   59 factor: num .

    $default  reduce using rule 59 (factor)


State 62

   31 selection_decl: IF LPAR . expression RPAR statement
   32               | IF LPAR . expression RPAR statement ELSE statement

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 90
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 63

   33 iterator_decl: WHILE LPAR . expression RPAR statement

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 91
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 64

    6 var_declaration: INT ident . SEMI
    7                | INT ident . LBRK num RBRK SEMI

    LBRK  shift, and go to state 14
    SEMI  shift, and go to state 15


State 65

   34 return_decl: RETURN SEMI .

    $default  reduce using rule 34 (return_decl)


State 66

   35 return_decl: RETURN expression . SEMI

    SEMI  shift, and go to state 92


State 67

   56 factor: LPAR expression . RPAR

    RPAR  shift, and go to state 93


State 68

   17 compound_decl: LBRC local_declarations RBRC .

    $default  reduce using rule 17 (compound_decl)


State 69

   20 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 20 (local_declarations)


State 70

   16 compound_decl: LBRC local_declarations statement_list . RBRC
   22 statement_list: statement_list . statement

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    RBRC    shift, and go to state 94
    SEMI    shift, and go to state 43

    compound_decl      go to state 45
    statement          go to state 72
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 71

   18 compound_decl: LBRC statement_list RBRC .

    $default  reduce using rule 18 (compound_decl)


State 72

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 73

   29 expression_decl: expression SEMI .

    $default  reduce using rule 29 (expression_decl)


State 74

   36 expression: var ASSIGN . expression

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 95
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 75

   42 relational: EQ .

    $default  reduce using rule 42 (relational)


State 76

   43 relational: NE .

    $default  reduce using rule 43 (relational)


State 77

   44 relational: LT .

    $default  reduce using rule 44 (relational)


State 78

   45 relational: LTE .

    $default  reduce using rule 45 (relational)


State 79

   46 relational: GT .

    $default  reduce using rule 46 (relational)


State 80

   47 relational: GTE .

    $default  reduce using rule 47 (relational)


State 81

   50 sum: PLUS .

    $default  reduce using rule 50 (sum)


State 82

   51 sum: MINUS .

    $default  reduce using rule 51 (sum)


State 83

   40 simple_expression: sum_expression relational . sum_expression

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    var             go to state 96
    sum_expression  go to state 97
    term            go to state 57
    factor          go to state 58
    activation      go to state 59
    ident           go to state 60
    num             go to state 61


State 84

   48 sum_expression: sum_expression sum . term

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    var         go to state 96
    term        go to state 98
    factor      go to state 58
    activation  go to state 59
    ident       go to state 60
    num         go to state 61


State 85

   54 mult: TIMES .

    $default  reduce using rule 54 (mult)


State 86

   55 mult: OVER .

    $default  reduce using rule 55 (mult)


State 87

   52 term: term mult . factor

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    var         go to state 96
    factor      go to state 99
    activation  go to state 59
    ident       go to state 60
    num         go to state 61


State 88

   60 activation: ident LPAR . arg_list RPAR
   61           | ident LPAR . RPAR

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41
    RPAR  shift, and go to state 100

    expression         go to state 101
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    arg_list           go to state 102
    ident              go to state 60
    num                go to state 61


State 89

   39 var: ident LBRK . expression RBRK

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 103
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 90

   31 selection_decl: IF LPAR expression . RPAR statement
   32               | IF LPAR expression . RPAR statement ELSE statement

    RPAR  shift, and go to state 104


State 91

   33 iterator_decl: WHILE LPAR expression . RPAR statement

    RPAR  shift, and go to state 105


State 92

   35 return_decl: RETURN expression SEMI .

    $default  reduce using rule 35 (return_decl)


State 93

   56 factor: LPAR expression RPAR .

    $default  reduce using rule 56 (factor)


State 94

   16 compound_decl: LBRC local_declarations statement_list RBRC .

    $default  reduce using rule 16 (compound_decl)


State 95

   36 expression: var ASSIGN expression .

    $default  reduce using rule 36 (expression)


State 96

   57 factor: var .

    $default  reduce using rule 57 (factor)


State 97

   40 simple_expression: sum_expression relational sum_expression .
   48 sum_expression: sum_expression . sum term

    PLUS   shift, and go to state 81
    MINUS  shift, and go to state 82

    $default  reduce using rule 40 (simple_expression)

    sum  go to state 84


State 98

   48 sum_expression: sum_expression sum term .
   52 term: term . mult factor

    TIMES  shift, and go to state 85
    OVER   shift, and go to state 86

    $default  reduce using rule 48 (sum_expression)

    mult  go to state 87


State 99

   52 term: term mult factor .

    $default  reduce using rule 52 (term)


State 100

   61 activation: ident LPAR RPAR .

    $default  reduce using rule 61 (activation)


State 101

   63 arg_list: expression .

    $default  reduce using rule 63 (arg_list)


State 102

   60 activation: ident LPAR arg_list . RPAR
   62 arg_list: arg_list . COMMA expression

    RPAR   shift, and go to state 106
    COMMA  shift, and go to state 107


State 103

   39 var: ident LBRK expression . RBRK

    RBRK  shift, and go to state 108


State 104

   31 selection_decl: IF LPAR expression RPAR . statement
   32               | IF LPAR expression RPAR . statement ELSE statement

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    SEMI    shift, and go to state 43

    compound_decl      go to state 45
    statement          go to state 109
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 105

   33 iterator_decl: WHILE LPAR expression RPAR . statement

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    SEMI    shift, and go to state 43

    compound_decl      go to state 45
    statement          go to state 110
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 106

   60 activation: ident LPAR arg_list RPAR .

    $default  reduce using rule 60 (activation)


State 107

   62 arg_list: arg_list COMMA . expression

    NUM   shift, and go to state 22
    ID    shift, and go to state 8
    LPAR  shift, and go to state 41

    expression         go to state 111
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 108

   39 var: ident LBRK expression RBRK .

    $default  reduce using rule 39 (var)


State 109

   31 selection_decl: IF LPAR expression RPAR statement .
   32               | IF LPAR expression RPAR statement . ELSE statement

    ELSE  shift, and go to state 112

    ELSE      [reduce using rule 31 (selection_decl)]
    $default  reduce using rule 31 (selection_decl)


State 110

   33 iterator_decl: WHILE LPAR expression RPAR statement .

    $default  reduce using rule 33 (iterator_decl)


State 111

   62 arg_list: arg_list COMMA expression .

    $default  reduce using rule 62 (arg_list)


State 112

   32 selection_decl: IF LPAR expression RPAR statement ELSE . statement

    IF      shift, and go to state 37
    WHILE   shift, and go to state 38
    RETURN  shift, and go to state 40
    NUM     shift, and go to state 22
    ID      shift, and go to state 8
    LPAR    shift, and go to state 41
    LBRC    shift, and go to state 31
    SEMI    shift, and go to state 43

    compound_decl      go to state 45
    statement          go to state 113
    expression_decl    go to state 49
    selection_decl     go to state 50
    iterator_decl      go to state 51
    return_decl        go to state 52
    expression         go to state 53
    var                go to state 54
    simple_expression  go to state 55
    sum_expression     go to state 56
    term               go to state 57
    factor             go to state 58
    activation         go to state 59
    ident              go to state 60
    num                go to state 61


State 113

   32 selection_decl: IF LPAR expression RPAR statement ELSE statement .

    $default  reduce using rule 32 (selection_decl)
